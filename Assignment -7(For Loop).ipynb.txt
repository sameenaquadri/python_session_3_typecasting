{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5d47abba-eb6d-41a0-a394-ee7fcfa18551",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "16 is Even Number\n"
     ]
    }
   ],
   "source": [
    "#2)\n",
    "import random\n",
    "num1=random.randint(10,20)\n",
    "if num1%2==0:\n",
    "    print(f\"{num1} is Even Number\")\n",
    "else:\n",
    "    print(f\"{num1} is Odd Number\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "40978a94-31a7-4560-917f-cd8d74655549",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Square of 21 is 441\n"
     ]
    }
   ],
   "source": [
    "#3)\n",
    "import random\n",
    "number=random.randint(20,25)\n",
    "square=number*number\n",
    "print(f\"Square of {number} is {square}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7e099b99-6ec0-4421-bd6e-c60c4a89d77f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the number 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Square of 5 is 25\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the number 8\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Square of 8 is 64\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the number 12\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Square of 12 is 144\n"
     ]
    }
   ],
   "source": [
    "#4)\n",
    "for i in range(3):\n",
    "    num=eval(input(\"enter the number\"))\n",
    "    square=num*num\n",
    "    print(f\"Square of {num} is {square}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "011a1018-b341-461b-aaea-1c68cdc35323",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter which table you want to see---> 14\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14 X 1  =  14\n",
      "14 X 2  =  28\n",
      "14 X 3  =  42\n",
      "14 X 4  =  56\n",
      "14 X 5  =  70\n",
      "14 X 6  =  84\n",
      "14 X 7  =  98\n",
      "14 X 8  =  112\n",
      "14 X 9  =  126\n",
      "14 X 10  =  140\n"
     ]
    }
   ],
   "source": [
    "#5)\n",
    "num=eval(input(\"enter which table you want to see--->\"))\n",
    "for i in range(1,11):\n",
    "    ans=num*i\n",
    "    print(f\"{num} X {i}  =  {ans}\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "379036d3-0ef9-40f1-90c4-7235185db686",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "which numbers factors you want 25\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 is the divisor of 25\n",
      "5 is the divisor of 25\n"
     ]
    }
   ],
   "source": [
    "#6)\n",
    "number=eval(input(\"which numbers factors you want\"))\n",
    "for i in range(1,num+1):\n",
    "    if number%i==0:\n",
    "        print(f\"{i} is the divisor of {number}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "fe15c5c7-0a75-4729-b7e2-132d08abd948",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 +  1  =  1  \n",
      "1 +  2  =  3  \n",
      "3 +  3  =  6  \n",
      "6 +  4  =  10  \n",
      "10 +  5  =  15  \n",
      "15 +  6  =  21  \n",
      "21 +  7  =  28  \n",
      "28 +  8  =  36  \n",
      "36 +  9  =  45  \n",
      "45 +  10  =  55  \n"
     ]
    }
   ],
   "source": [
    "#7)\n",
    "summ=0\n",
    "for i in range(1,11):\n",
    "    summ=summ+i\n",
    "\n",
    "    print(f\"{summ-i} +  {i}  =  {summ}  \")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "e0464a46-e32f-42d7-9d25-2203b8dc09fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enetr the number 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "average  is  0.2\n",
      "average  is  0.4\n",
      "average  is  0.6\n",
      "average  is  0.8\n",
      "average  is  1.0\n"
     ]
    }
   ],
   "source": [
    "#8)\n",
    "summ=0\n",
    "n=eval(input(\"enetr the number\"))\n",
    "for i in range(1,n+1):\n",
    "    total_sum=summ+i\n",
    "    average=total_sum/n\n",
    "    print(f\"average  is  {average}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7999f8b8-004d-43d1-ab8c-05fcdf4353bc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "which numbers factor you want 10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "5\n",
      "10\n",
      "number of divisors for 10 is 4\n"
     ]
    }
   ],
   "source": [
    "#9)\n",
    "count=0\n",
    "number=eval(input(\"which numbers factor you want\"))\n",
    "for i in range(1,number+1):\n",
    "    if number%i==0:\n",
    "        count=count+1\n",
    "        print(i)\n",
    "print(f\"number of divisors for {number} is {count}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "4c6777db-6420-4353-b6bc-28d0e4a7c881",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter number 10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "numm1 is 6\n",
      "fail\n"
     ]
    }
   ],
   "source": [
    "#10) case1\n",
    "import random\n",
    "\n",
    "numm1=random.randint(1,10)\n",
    "numm2=eval(input(\"enter number\"))\n",
    "print(f\"numm1 is {numm1}\")\n",
    "if numm1==numm2:\n",
    "        print(\"won\")\n",
    "else:\n",
    "        print(\"fail\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "45f80993-0259-489a-8682-f49690edd542",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "numm2 is : 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "numm1 is : 3\n",
      "fail\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "numm2 is : 8\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "numm1 is : 10\n",
      "fail\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "numm2 is : 12\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "numm1 is : 6\n",
      "fail\n"
     ]
    }
   ],
   "source": [
    "#10) case 2\n",
    "import random\n",
    "for i in range(3):\n",
    "    numm1=random.randint(1,10)\n",
    "    numm2=eval(input(\"numm2 is :\"))\n",
    "    print(f\"numm1 is : {numm1}\")\n",
    "\n",
    "    if numm1==numm2:\n",
    "        print(\"won\")\n",
    "        break\n",
    "    else:\n",
    "        print(\"fail\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "bc3a3b2a-80ab-46ef-a79f-ae56655d7300",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter number 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "you won\n",
      "######################\n"
     ]
    }
   ],
   "source": [
    "#10) case 3\n",
    "import random\n",
    "chances=4\n",
    "for i in range(4):\n",
    "    num1=random.randint(1,10)\n",
    "    num2=eval(input(\"enter number\"))\n",
    "    if num1==num2:\n",
    "        print(\"you won\")\n",
    "        print(\"######################\")\n",
    "        break\n",
    "    else:\n",
    "        print(\"you fail\")\n",
    "        print(\"##########################\")\n",
    "\n",
    "        if i==3:\n",
    "             print(\"try again after 24 hours!!\")\n",
    "        else:\n",
    "            print(f\"chances you left {chances-i-1}\")\n",
    "            print(\"##########################\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "6a72f5f8-8581-4df5-84e1-975dc12cbd90",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "16 is Even Nmuber\n",
      "18 is Even Nmuber\n",
      "18 is Even Nmuber\n",
      "17 is Odd Number\n",
      "19 is Odd Number\n",
      "Number of even numbers are 3\n",
      "Number of odd numbers are 2\n"
     ]
    }
   ],
   "source": [
    "#11)\n",
    "import random\n",
    "even_count=0\n",
    "odd_count=0\n",
    "for i in range(5):\n",
    "    numm1=random.randint(10,20)\n",
    "    if numm1%2==0:\n",
    "        print(f\"{numm1} is Even Nmuber\")\n",
    "        even_count=even_count+1\n",
    "\n",
    "    else:\n",
    "        print(f\"{numm1} is Odd Number\")\n",
    "        odd_count=odd_count+1\n",
    "print(f\"Number of even numbers are {even_count}\")\n",
    "print(f\"Number of odd numbers are {odd_count}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "5fe138ae-5525-495b-a8c7-fe6b7c8af2bc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 is Even Number\n",
      "5 is Even Number\n",
      "5 is Even Number\n",
      "5 is Even Number\n",
      "5 is Even Number\n",
      "Number of even numbers are 5\n",
      "Number of even numbers are 0\n",
      "Sum of even numbers 72 \n",
      "Sum of odd numbers 0 \n"
     ]
    }
   ],
   "source": [
    "#12)\n",
    "import random\n",
    "even_count=0\n",
    "odd_count=0\n",
    "even_sum=0\n",
    "odd_sum=0\n",
    "for i in range(5):\n",
    "    numm1=random.randint(10,20)\n",
    "    if numm1%2==0:\n",
    "        print(f\"{num1} is Even Number\")\n",
    "        even_count=even_count+1\n",
    "        even_sum=even_sum+numm1\n",
    "    else:\n",
    "        print(f\"{num1} is Odd Number\")\n",
    "        odd_count=odd_count+1\n",
    "        odd_sum=odd_sum+numm1\n",
    "print(f\"Number of even numbers are {even_count}\")\n",
    "print(f\"Number of even numbers are {odd_count}\")\n",
    "\n",
    "print(f\"Sum of even numbers {even_sum} \")\n",
    "print(f\"Sum of odd numbers {odd_sum} \")\n",
    "\n",
    "\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "52817f6f-35c6-4848-b9d4-fbbe8cb8a833",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
